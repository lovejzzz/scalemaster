/* Body */
html, body {
    min-height: 100%;
    margin: 0;
    padding: 0;
}

html {
    background: linear-gradient(to bottom, #ffffff 0%, #f7f7f7 100%);
}

body {
    font-family: "IM Fell Great Primer", serif;
    font-weight: 400;
    font-style: normal;
    color: #333;
    padding: 20px;   
}

header {
    font-family: "IM Fell Great Primer", serif;
    font-weight: 400;
    font-style: normal;
    text-align: center;
    margin-bottom: 20px;
    font-size: 2em;
    color: #444;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

/* Center the title GIF */
header img {
    display: block; /* Make the image a block element */
    margin: 0 auto; /* Center the image */
}

/* Container for all sections */
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    padding: 0 15px;
    box-sizing: border-box;
}

/* Chord Input, Display, Play Buttons, and Voicing Section */
#chord-input, #chord-display, #play-buttons, #voicing-section {
    width: 100%;
    max-width: 600px;
    margin: 0 auto 20px auto;
    padding: 15px;
    background: linear-gradient(to bottom, #ffffff 0%, #eaeaea 100%);
    border-radius: 8px;
    box-shadow: inset 0 -1px 1px rgba(0, 0, 0, 0.1), 
                0 4px 6px rgba(0, 0, 0, 0.1);
    border: 1px solid #ccc;
    box-sizing: border-box;
}

/* Chord Input specific styles */
#chord-input {
    position: relative;
    padding: 15px;
}

/* Input row layout */
.input-row {
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
}

/* Make selects grow to fill space */
.input-row select {
    flex: 1;
    min-width: 0; /* Allow select to shrink below min-content */
}

/* Button container in chord input */
.button-container {
    display: flex;
    gap: 10px;
    margin-left: 10px;
}

/* Add and Random Chord buttons */
#add-chord, #random-chord {
    min-width: 44px;
    height: 44px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0; /* Prevent buttons from shrinking */
}

/* Specific Styles for Voicing Controls */
#voicing-section {
    display: flex;
    justify-content: flex-start; /* Changed from space-between to flex-start */
    align-items: center;
    gap: 15px;
    position: relative; /* Ensure the voicing section is a positioned container */
}

/* Voicing type text style */
#voicing-section label {
    font-family: "IM Fell Great Primer", serif;
}

/* Voicing button styles */
#generate-voicing {
    position: relative;
    overflow: hidden;
}

/* Uniform styles for all select elements */
select {
    padding: 10px 30px 10px 10px; /* Increased right padding for arrow */
    font-size: 1em;
    border: 1px solid #ccc;
    border-radius: 4px;
    background: #fff;
    color: #333;
    transition: background 0.3s;
    height: 40px;
    width: auto;
    min-width: 120px;
    max-width: 100%; /* Ensure it doesn't overflow its container */
    box-sizing: border-box;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg fill="black" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
    background-repeat: no-repeat;
    background-position: right 5px top 50%;
    background-size: 20px auto;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Specific styles for root-note select */
#root-note {
    min-width: 80px; /* Shorter width for root selection */
}

/* Specific styles for scale-category and scale-mode */
#scale-category, #scale-mode {
    min-width: 150px; /* Increased minimum width */
}

select:focus {
    background-color: #f0f0f0;
    outline: none;
    border-color: #999;
}

/* Play buttons container */
#play-buttons {
    display: flex;
    justify-content: center;
    gap: 15px;
    flex-wrap: wrap;
}

#play-buttons button {
    flex: 1;
    min-width: 120px;
    max-width: 200px;
}

/* Button styles */
button {
    padding: 10px 20px;
    font-size: 1em;
    background: linear-gradient(to bottom, #ffffff 0%, #e6e6e6 100%);
    color: #333;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: transform 0.2s ease, background 0.3s;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    height: 40px;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

button:hover {
    background: linear-gradient(to bottom, #ffc107 0%, #ffdd57 100%);
    transform: scale(1.1);
}

button:active {
    transform: scale(0.95);
}

/* Unordered List */
ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

/* List Items */
li {
    position: relative;
    padding: 12px 15px;
    background: linear-gradient(to bottom, #ffffff 0%, #f0f0f0 100%);
    border: 1px solid #ccc;
    border-radius: 8px;
    display: inline-block;
    cursor: grab;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    white-space: nowrap;
    margin: 5px;
    overflow: hidden;  /* Add this to contain the reflection */
}

li:hover {
    background: linear-gradient(to bottom, #ffc107 0%, #ffdd57 100%);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    transform: scale(1.1);
    z-index: 1;
}

.selected-scale {
    background: linear-gradient(to bottom, #ffc107 0%, #ffdd57 100%);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
    transform: scale(1.05);
}

/* Piano Container */
#piano {
    display: flex;
    justify-content: center;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    position: relative;
    overflow: hidden;
}

/* Keyboard styles */
.keyboard {
    position: relative;
    width: 100%;
    padding-bottom: 30%; /* Maintain aspect ratio */
    max-width: 600px;
    margin: 0 auto;
}

/* Base key styles */
.piano-key {
    position: absolute;
    border-radius: 0 0 5px 5px;
    cursor: pointer;
    transition: transform 0.1s ease-in-out;
}

/* Piano Key Active State */
.piano-key.active {
    background: linear-gradient(to bottom, #ff4444 0%, #cc0000 100%) !important;
    border-color: #cc0000 !important;
}

/* Black Key Active State */
.black-key.active {
    background: linear-gradient(to bottom, #ff4444 0%, #cc0000 100%) !important;
    border-color: #cc0000 !important;
}

/* White keys */
.white-key {
    background: linear-gradient(to bottom, #ffffff 0%, #e6e6e6 100%);
    border: 1px solid #bbb;
    width: 6.66%; /* 100% / 15 white keys */
    height: 100%;
    z-index: 1;
    box-shadow: inset 0 -1px 1px rgba(0, 0, 0, 0.2), 0 2px 3px rgba(0, 0, 0, 0.2);
}

/* Black keys */
.black-key {
    background: linear-gradient(to bottom, #333333 0%, #000000 100%);
    width: 4%; /* Narrower than white keys */
    height: 65%;
    z-index: 2;
    border: 1px solid #000;
    box-shadow: inset 0 -1px 1px rgba(255, 255, 255, 0.2), 0 2px 3px rgba(0, 0, 0, 0.4);
    border-radius: 0 0 2px 2px;
}

/* Set positions for white keys */
.white-key:nth-of-type(1) { left: 0; }
.white-key:nth-of-type(2) { left: 6.66%; }
.white-key:nth-of-type(3) { left: 13.32%; }
.white-key:nth-of-type(4) { left: 19.98%; }
.white-key:nth-of-type(5) { left: 26.64%; }
.white-key:nth-of-type(6) { left: 33.3%; }
.white-key:nth-of-type(7) { left: 39.96%; }
.white-key:nth-of-type(8) { left: 46.62%; }
.white-key:nth-of-type(9) { left: 53.28%; }
.white-key:nth-of-type(10) { left: 59.94%; }
.white-key:nth-of-type(11) { left: 66.6%; }
.white-key:nth-of-type(12) { left: 73.26%; }
.white-key:nth-of-type(13) { left: 79.92%; }
.white-key:nth-of-type(14) { left: 86.58%; }
.white-key:nth-of-type(15) { left: 93.24%; }

/* Set positions for black keys */
.black-key:nth-of-type(16) { left: 4.66%; }  /* After C */
.black-key:nth-of-type(17) { left: 11.32%; } /* After D */
.black-key:nth-of-type(18) { left: 24.64%; } /* After F */
.black-key:nth-of-type(19) { left: 31.3%; }  /* After G */
.black-key:nth-of-type(20) { left: 37.96%; } /* After A */
.black-key:nth-of-type(21) { left: 51.28%; } /* After C */
.black-key:nth-of-type(22) { left: 57.94%; } /* After D */
.black-key:nth-of-type(23) { left: 71.26%; } /* After F */
.black-key:nth-of-type(24) { left: 77.92%; } /* After G */
.black-key:nth-of-type(25) { left: 84.58%; } /* After A */

/* Key hover and active states */
.white-key:hover {
    background: linear-gradient(to bottom, #ffffff 0%, #f0f0f0 100%);
}

.black-key:hover {
    background: linear-gradient(to bottom, #444444 0%, #222222 100%);
}

.white-key:active, .white-key.active {
    transform: scale(0.97);
}

.black-key:active, .black-key.active {
    transform: scale(0.97);
}

/* Highlighted key styles */
.white-key.highlighted {
    background: #ffd700;
    box-shadow: 0 0 10px rgba(255, 215, 0, 0.7);
}

.black-key.highlighted {
    background: #ffa500;
    box-shadow: 0 0 10px rgba(255, 165, 0, 0.7);
}

/* Mobile adjustments */
@media screen and (max-width: 768px) {
    .keyboard {
        padding-bottom: 45%; /* Slightly taller on mobile for better touch */
    }
}

@media screen and (max-width: 480px) {
    .keyboard {
        padding-bottom: 60%; /* Even taller on smaller screens */
    }
}

/* Tooltip Container */
.tooltip-container {
    position: relative;
    float: right;
    margin-left: 20px;
}

/* Tooltip Icon */
.tooltip-icon {
    background-image: url('asset/tooltip.gif'); /* Set the tooltip icon to the gif */
    background-size: 20px 20px; /* Set size for the icon */
    background-repeat: no-repeat; /* Prevent repeating */
    width: 20px; /* Set width for the icon */
    height: 20px; /* Set height for the icon */
    cursor: pointer;
}

/* General Tooltip Text Styling */
.tooltip-text {
    visibility: hidden;
    width: min(190px, 40vw);
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 5px;
    padding: 5px;
    position: absolute;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.2s; /* Keep the opacity transition */
}

/* Show Tooltip on Hover */
.tooltip-container:hover .tooltip-text {
    visibility: visible;
    opacity: 1;
}

/* Native browser tooltip styles */
[title] {
    position: relative;
    transition-delay: 0s !important; /* Set to 0s for instant appearance */
}

/* 2b. Position the tooltip container at the bottom right of the voicing section */
#voicing-section .tooltip-container {
    position: absolute;
    bottom: 5px;
    right: 5px;
    float: none;
    margin-left: 0;
}

/* 3. Chord Display Tooltip Adjustments */
#chord-display {
    position: relative;
}

#chord-display h2 {
    display: inline-block;
    margin-right: 10px;
}

#chord-display .tooltip-container {
    position: absolute;
    bottom: 5px;
    right: 5px;
    float: none;
    margin-left: 0;
}

/* 2c. Adjust tooltip popup position for voicing section */
#voicing-section .tooltip-text {
    top: 50%;
    right: 100%;
    transform: translateY(-50%);
    bottom: auto;
    left: auto;
    margin-right: 10px;
}

/* 4. Tooltip Arrow for Voicing Section */
#voicing-section .tooltip-text::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 100%;
    margin-top: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: transparent transparent transparent #555;
}

/* Tooltip Text Styling for Chord Display */
#chord-display .tooltip-text {
    top: 50%;
    right: 100%;
    transform: translateY(-50%);
    bottom: auto;
    left: auto;
    margin-right: 10px;
}

/* Tooltip Arrow for Chord Display */
#chord-display .tooltip-text::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 100%;
    margin-top: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: transparent transparent transparent #555;
}

/* Scale List Animation */
@keyframes scaleListAnimation {
    0% {
        background-color: rgba(255, 255, 255, 0.2);
    }
    100% {
        background-color: transparent;
    }
}

.scale-list-animation {
    animation: scaleListAnimation 1s ease-out forwards;
}

/* Keyframe animation for rolling out keys */
@keyframes rollOut {
    from {
        transform: translateX(-300%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Apply the animation to white and black keys */
.white-key{
    animation: rollOut 1s ease-out forwards;
    animation-timing-function: ease-in-out;
    opacity: 0; /* Start with keys hidden */
}

.black-key {
    animation: rollOut 1s ease-out forwards;
    animation-timing-function: ease-in-out;
    opacity: 0; /* Start with keys hidden */
}

/* Sequential delay for each key based on its order */
#key0 { animation-delay: 0s; }
#key1 { animation-delay: 0.1s; }
#key2 { animation-delay: 0.2s; }
#key3 { animation-delay: 0.3s; }
#key4 { animation-delay: 0.4s; }
#key5 { animation-delay: 0.5s; }
#key6 { animation-delay: 0.6s; }
#key7 { animation-delay: 0.7s; }
#key8 { animation-delay: 0.8s; }
#key9 { animation-delay: 0.9s; }
#key10 { animation-delay: 1s; }
#key11 { animation-delay: 1.1s; }
#key12 { animation-delay: 1.2s; }
#key13 { animation-delay: 1.3s; }
#key14 { animation-delay: 1.4s; }
#key15 { animation-delay: 1.5s; }
#key16 { animation-delay: 1.6s; }
#key17 { animation-delay: 1.7s; }
#key18 { animation-delay: 1.8s; }
#key19 { animation-delay: 1.9s; }
#key20 { animation-delay: 2s; }
#key21 { animation-delay: 2.1s; }
#key22 { animation-delay: 2.2s; }
#key23 { animation-delay: 2.3s; }
#key24 { animation-delay: 2.4s; }

/* Responsive Adjustments */
@media screen and (max-width: 600px) {
    #chord-input, #voicing-section, #chord-display {
        flex-direction: column;
        align-items: stretch;
    }

    select, button {
        width: 100%;
        margin-bottom: 10px;
    }

    #play-buttons {
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    .keyboard {
        max-width: 100%;
    }

    #voicing-section .tooltip-container, #chord-display .tooltip-container {
        bottom: 10px;
        right: 10px;
    }

    .tooltip-text {
        width: min(240px, 60vw); /* Wider on mobile but still responsive */
    }
}

/* Mobile Responsive Styles */
@media screen and (max-width: 768px) {
    body {
        padding: 10px;
    }

    header {
        font-size: 1.5em;
    }

    /* Adjust container width for mobile */
    .container {
        padding: 0 10px;
    }

    #chord-input, #chord-display, #play-buttons, #voicing-section {
        max-width: 100%;
        padding: 10px;
        margin-left: 0;
        margin-right: 0;
        box-sizing: border-box;
    }

    /* Stack voicing controls vertically */
    #voicing-section {
        flex-direction: column;
        align-items: stretch;
        gap: 10px;
    }

    /* Make selects full width on mobile */
    select {
        width: 100%;
        min-width: unset;
        max-width: 100%;
    }

    /* Adjust button sizes */
    #add-chord, #random-chord {
        width: auto;
        position: static;
        margin: 5px;
    }

    /* Adjust chord input layout */
    #chord-input {
        padding-bottom: 10px;
    }

    /* Stack buttons in chord input */
    #chord-input-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }

    /* Adjust play buttons for mobile */
    #play-buttons {
        flex-direction: column;
        gap: 10px;
    }

    #play-buttons button {
        width: 100%;
    }

    /* Make piano keys smaller on mobile */
    .white-key {
        width: 30px;
        height: 120px;
    }

    .black-key {
        width: 20px;
        height: 80px;
    }

    /* Adjust list items for mobile */
    li {
        width: 100%;
        margin: 5px 0;
        box-sizing: border-box;
    }

    /* Make tooltips more mobile-friendly */
    .tooltip {
        max-width: 200px;
    }
}

/* iPhone SE and smaller devices */
@media screen and (max-width: 375px) {
    .white-key {
        width: 25px;
        height: 100px;
    }

    .black-key {
        width: 15px;
        height: 70px;
    }

    header {
        font-size: 1.2em;
    }
}

/* Update Mobile Styles */
@media screen and (max-width: 768px) {
    .container {
        padding: 0 10px;
    }

    #piano {
        margin: 0 -10px; /* Negative margin to allow full width */
        padding: 0 10px;
        width: calc(100% + 20px); /* Compensate for negative margin */
    }

    .white-key {
        width: 35px; /* Slightly larger for better touch */
        height: 120px;
        min-width: 35px; /* Prevent shrinking */
    }

    .black-key {
        width: 20px;
        height: 80px;
        min-width: 20px; /* Prevent shrinking */
    }

    /* Improve button layout */
    .button-container {
        justify-content: center;
        flex-wrap: wrap;
    }

    #add-chord, #random-chord {
        position: static;
        width: auto;
        flex: 0 1 auto;
        margin: 5px;
    }

    /* Make containers responsive */
    #chord-input, #chord-display, #play-buttons, #voicing-section {
        width: 100%;
        max-width: 100%;
        margin-left: 0;
        margin-right: 0;
        box-sizing: border-box;
    }
}

/* iPhone SE and smaller devices */
@media screen and (max-width: 375px) {
    .white-key {
        width: 30px;
        height: 100px;
        min-width: 30px;
    }

    .black-key {
        width: 18px;
        height: 70px;
        min-width: 18px;
    }

    .container {
        padding: 0 5px;
    }
}

/* Button container adjustments */
@media screen and (max-width: 768px) {
    .button-container {
        justify-content: center;
        margin-top: 15px;
    }

    /* Play buttons on mobile */
    #play-buttons {
        flex-direction: column;
        gap: 10px;
    }

    #play-buttons button {
        width: 100%;
        max-width: none;
    }

    /* Add and Random buttons */
    #add-chord, #random-chord {
        min-width: 50px;
        height: 50px;
    }
}

/* Extra small devices */
@media screen and (max-width: 480px) {
    /* Adjust button sizes for better touch */
    #add-chord, #random-chord {
        min-width: 44px;
        height: 44px;
        font-size: 1.2em;
    }

    /* Ensure buttons are touch-friendly */
    button {
        min-height: 44px;
    }
}

/* Responsive adjustments for input row */
@media screen and (max-width: 600px) {
    .input-row {
        flex-wrap: wrap;
    }
    
    .input-row select {
        flex: 1 1 auto;
    }
    
    .button-container {
        margin-left: auto;
    }
}

/* MIDI Status Styles */
#midi-status {
    font-size: 0.8em;
    padding: 5px 10px;
    border-radius: 4px;
    margin: 0 auto 10px auto;
    width: fit-content;
    display: block;
    text-align: center;
}

#midi-status.connected {
    background-color: #282828;
    color: white;
    margin: 0 auto 10px auto;
    width: fit-content;
    display: block;
    text-align: center;
}

/* Trash Can Icon */
.trash-can {
    position: relative;
    display: inline-block;
    font-size: 18px;
    cursor: pointer;
    transition: transform 0.2s ease, background 0.3s;
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 8px;
    vertical-align: middle;
    margin-left: 10px;
}

.trash-can:hover {
    transform: scale(1.1);
    background: linear-gradient(to bottom, #ffc107 0%, #ffdd57 100%);
}

.trash-can.drag-over {
    transform: scale(1.2);
    background: #ffdd57;
}

/* Custom Alert Modal */
.custom-alert {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
    border: 2px solid #444;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    color: #fff;
    font-family: 'Arial', sans-serif;
    text-align: center;
    min-width: 300px;
}

.custom-alert.show {
    display: block;
    animation: fadeIn 0.3s ease-out;
}

.custom-alert-message {
    margin-bottom: 20px;
    font-size: 16px;
}

.custom-alert-button {
    background: linear-gradient(145deg, #3a3a3a, #2a2a2a);
    border: none;
    border-radius: 5px;
    padding: 8px 20px;
    color: #fff;
    cursor: pointer;
    transition: all 0.3s ease;
}

.custom-alert-button:hover {
    background: linear-gradient(145deg, #444, #333);
    transform: translateY(-1px);
}

.modal-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
}

.modal-overlay.show {
    display: block;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}

/* Metallic Reflection Animation */
@keyframes metallic-reflection {
    0% {
        transform: translateX(var(--start-x, -100px)) skewX(-45deg);
    }
    100% {
        transform: translateX(var(--end-x, 100px)) skewX(-45deg);
    }
}

.reflection-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 30px;
    height: 100%;
    pointer-events: none;
    background: linear-gradient(
        90deg,
        rgba(255,255,255,0) 0%,
        rgba(255,255,255,0.8) 50%,
        rgba(255,255,255,0) 100%
    );
    opacity: 0;
}

.reflection-overlay.reflection-animation {
    opacity: 1;
    animation: metallic-reflection 1s linear forwards;
}